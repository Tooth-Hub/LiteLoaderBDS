{
    "base": {
        "getDimName": {
            "0": "Overworld",
            "1": "Nether",
            "2": "End",
            "unknown": "Dimensione sconosciuta"
        }
    },
    "ll": {
        "main": {
            "checkRunningBDS": {
                "detected": "Rilevata l'esistenza di un altro processo BDS con lo stesso percorso!",
                "tip": "Ciò non permetterà l'uso della porta di rete e del mondo",
                "ask": "Vuoi terminare il processo con PID {}? (y = Sì, n = No)"
            },
            "fixAllowList": {
                "removeEmptyAllowlist": "allowlist.json è vuoto! Rimozione del file in corso...",
                "checkManually": "Entrambi allowlist.json e whitelist.json esistono e non sono vuoti. Si prega di controllarli manualmente",
                "renamed": "Rinominato whitelist.json a allowlist.json"
            },
            "warning": {
                "inDevMode": "Attualmente in modalità sviluppo!",
                "betaVersion": "Attualmente utilizzando una versione beta.",
                "productionEnv": "NON UTILIZZARE IN UN AMBIENTE DI PRODUZIONE!",
                "protocolVersionNotMatch": {
                    "1": "La versione del protocollo non corrisponde, versione di destinazione: {}, versione corrente: {}.",
                    "2": "Questo probabilmente crasherà il server, si prega di usare la versione di LiteLoader che corrisponde alla versione del BDS!"
                }
            }
        },
        "antiAbnormalItem": {
            "detected": "Errore con i dati item del Player({})!",
            "itemInfo": "Item: {}"
        },
        "cmd": {
            "tpdim": {
                "success": "Teletrasportato {} a {} ({:2f}, {:2f}, {:2f})",
                "error": {
                    "noActorTeleported": "Nessun attore telegrasportato",
                    "noActorSpecified": "Nessun attore specificato"
                },
                "invalidDimid": "ID dimensione non valido: {}"
            },
            "listPlugin": {
                "overview": "Lista dei plugin: [{}]",
                "tip": "* Invia comando \"ll list <Plugin Name>\" per ulteriori informazioni"
            },
            "pluginInfo": {
                "title": "Plugin <{}>",
                "error": {
                    "pluginNotFound": "Il plugin <{}> non è stato trovato!"
                }
            },
            "version": {
                "msg": "Server dedicato Bedrock {}\n- con LiteLoaderBDS {}\n- Protocollo di rete: {}"
            },
            "help": {
                "msg": "[Introduction]\nLiteLoaderBDS è un plugin loader non ufficiale per lo sviluppo di modding del server dedicato Bedrock.\nFornisce un enorme numero di API, un potente sistema di eventi e un sacco di interfacce di utilità imballate.\n[Github]\n--> https://github.com/LiteLDev/LiteLoaderBDS <--\nBenvenuto nel nostro progetto GitHub. Per ottenere maggiori informazioni ~"
            },
            "loadPlugin": {
                "success": "Plugin <{}> caricato.",
                "fail": "Impossibile caricare il plugin {}"
            },
            "unloadPlugin": {
                "success": "Plugin <{}> caricato.",
                "fail": "Impossibile caricare il plugin <{}>"
            },
            "reloadPlugin": {
                "success": "Plugin <{}> ricaricato.",
                "fail": "Impossibile caricare il plugin <{}>"
            },
            "reloadAllPlugins": {
                "success": "{} plugins ricaricati con successo.",
                "fail": "Impossibile ricaricare tutti i plugin"
            },
            "error": {
                "noPathSpecified": "È necessario fornire un percorso valido di LiteLoader per un plugin!",
                "noNameSpecified": "È necessario fornire un nome valido per un plugin!"
            }
        },
        "config": {
            "save": {
                "fail": "Impossibile salvare(creare) il file di configurazione!"
            },
            "creating": "File di configurazione LL <{}> non trovato. Creazione del file di configurazione...",
            "warning": {
                "configOutdated": "Il file di configurazione LL <{}> è obsoleto."
            },
            "updating": "Aggiornamento del file di configurazione..."
        },
        "crashLogger": {
            "existsingDebuggerDetected": "Debugger esistente rilevato. Il CrashLogger integrato non funzionerà.",
            "wineDetected": "Ambiente Wine rilevato. Il CrashLogger integrato non funzionerà.",
            "error": {
                "cannotCreateDaemonProcess": "Impossibile creare il processo Daemon CrashLogger!"
            },
            "warning": {
                "crashLoggerDisabled": {
                    "1": "Il CrashLogger integrato non è abilitato perché la configurazione l'ha disabilitato.",
                    "2": "Non ci sarà alcun crash log quando si verifica un'eccezione non gestita,",
                    "3": "che rende quasi impossibile scoprire il motivo del crash e la fonte del crash.",
                    "4": "Si consiglia vivamente di attivarlo per garantire la stabilità del server"
                },
                "conflicts": {
                    "1": "Il CrashLogger integrato non è abilitato perché il plugin <{}> va in conflitto con esso",
                    "2": "Non ci sarà alcun crash log quando si verifica un'eccezione non gestita,",
                    "3": "che rende quasi impossibile scoprire il motivo del crash e la fonte del crash.",
                    "4": "Poiché CrashLogger è un componente importante che garantisce la stabilità del server",
                    "5": "Ti consigliamo di pensare due volte all'utilizzo del plugin <{}>"
                }
            },
            "init": {
                "fail": {
                    "msg": "Avvio del CrashLogger integrato non riuscito!",
                    "tip": "Non ci sarà alcun crash log quando si verifica un'eccezione non gestita."
                }
            }
        },
        "addonsHelper": {
            "error": {
                "addonConfigNotFound": "Configurazione delle estensioni non trovata!",
                "addonFileNotFound": "File di estensione \"{}\" non trovato!",
                "addonNotFound": "Estensione <{}> non trovata!",
                "outOfRange": "Indice del'estensione {} fuori dall'intervallo consentito",
                "unsupportedFileType": "Trovato un tipo di file non supportato!",
                "parsingEnabledAddonsList": "Errore durante l'analisi dell'elenco di estensioni abilitate",
                "noAddonInstalled": "Nessuna estensione è stata installata.",
                "installationAborted": "Processo di installazione interrotto!"
            },
            "displayError": "Errore: {}",
            "removeAddonFromList": {
                "fail": "Impossibile rimuovere l'estensione <{}> dal file di configurazione!",
                "success": "Rimossa l'estensione <{}> dal file di configurazione."
            },
            "addAddonToList": {
                "invalidList": "File di lista di estensioni {} non valido, creato un backup a {} e reimpostata la configurazione predefinita",
                "fail": "Impossibile inserire l'estensione {} in {}!",
                "success": "Aggiunta l'estensione <{}> al file di configurazione."
            },
            "install": {
                "installing": "Installando l'estensione <{}>...",
                "error": {
                    "failToUncompress": {
                        "msg": "Impossibile estrarre l'estensione {}!",
                        "exitCode": "Codice di uscita: {}",
                        "programOutput": "Output del programma:\n{}"
                    }
                }
            },
            "uninstall": {
                "success": "Estensione <{}> disinstallata."
            },
            "autoInstall": {
                "tip": {
                    "dirCreated": "Directory creata. È possibile spostare i file di estensione compressi su {} per essere installati al prossimo avvio."
                },
                "working": "{} nuove estensioni trovate da installare...",
                "installed": "L'estensione {} è stata installata.",
                "installedCount": "{} estensioni installate."
            },
            "cmd": {
                "output": {
                    "list": {
                        "overview": "Estensioni: {} estensioni installate:"
                    }
                }
            }
        },
        "loader": {
            "loadScriptEngine": {
                "error": {
                    "versionNotMatch": "La nuova versione del file <{}> dello Script Engine per {} non corrisponde alla versione di LiteLoader <{}>"
                },
                "success": "* ScriptEngine per {} caricato"
            },
            "loadDotNetEngine": {
                "warning": {
                    "notFinished": "LiteLoader.NET non è ancora finito!"
                },
                "error": {
                    "versionNotMatch": "La nuova versione del file <{}> di LiteLoader.NET non corrisponde alla versione di LiteLoader <{}>"
                },
                "success": "* Motore .NET caricato"
            },
            "loadMain": {
                "loadingPlugins": "Caricamento dei plugin in corso...",
                "loadedShellLink": "Plugin ShellLinked <{} => {}> caricato",
                "loadedPlugin": "Plugin <{name}> caricato",
                "done": "{} plugin caricati.",
                "start": "Caricamento dei plugin nativi in corso..."
            },
            "initNodeJsDirectories": {
                "created": "Cartella del runtime Node.js non trovata, creata una nuova cartella."
            }
        },
        "notice": {
            "newForum": "Il nostro nuovo forum è aperto! -> {}",
            "license": "LiteLoaderBDS è concesso in licenza sotto la licenza {}",
            "translateText": "Help us translate & improve text in LL -> {}"
        },
        "pluginManager": {
            "error": {
                "invalidFileType": "Tipo di file plugin non valido {} in {}",
                "noValidPluginFound": "Nessun plugin valido trovato su {}!",
                "failToRegisterPlugin": "Impossibile registrare il plugin {}!",
                "hasBeenRegistered": "Un plugin chiamato {} è stato registrato",
                "failToLoadPlugin": "Impossibile caricare il plugin {}!",
                "pluginNotFound": "Il plugin <{}> non è stato trovato"
            },
            "warning": {
                "unloadDllNotFinished": "Il caricamento dei plugin DLL non è terminato.",
                "reloadDllNotFinished": "Il caricamento dei plugins Dll non è terminato."
            },
            "reloadPlugin": {
                "fail": "Impossibile ricaricare il plugin {}!"
            }
        }
    },
    "llse": {
        "init": {
            "llMoney": {
                "notFound": "LLMoney.dll non è stato trovato, il sistema di economia dello ScriptEngine non funzionerà"
            }
        },
        "api": {
            "ll": {
                "require": {
                    "success": " - Requisiti necessari del plugin caricati con successo. Caricato: ",
                    "fail": " - Caricamento dei requisiti necessari del plugin fallito",
                    "download": {
                        "success": " - Requisiti necessari scaricati con successo! Percorso: ",
                        "fail": " - Download dei requisiti necessari del plugin fallito! Codice: "
                    }
                }
            }
        },
        "apiHelp": {
            "parseJson": {
                "fail": "Errore di analisi JSON"
            }
        },
        "loader": {
            "loadDepends": {
                "success": "Libreria {} caricata.",
                "fail": "Impossibile caricare la libreria {}"
            },
            "loadMain": {
                "start": "Caricamento dei plugin {type} in corso...",
                "done": "{count} plugin {type} caricati.",
                "nodejs": {
                    "install": {
                        "fail": "Impossibile installare il pacchetto plugin {}, si prega di controllare il file package.json!",
                        "start": "Trovato pacchetto plugin Node.js \"{path}\"! Installazione in corso..."
                    },
                    "ignored": "Nessun file package.json trovato nella cartella {path}, ignorato."
                },
                "loadedPlugin": "Plugin {type} <{name}> caricato.",
                "installPluginPack": {
                    "done": "{count} pacchetti plugin {type} installati."
                }
            },
            "nodejs": {
                "executeNpmInstall": {
                    "success": "Esecuzione di \"npm install\" completata con successo.",
                    "start": "Esecuzione di \"npm install\" per il plugin {name}...",
                    "fail": "Si è verificato un errore. Codice di uscita: {code}"
                },
                "register": {
                    "fail": "Impossibile aiutare il plugin {name} a registrarsi!"
                }
            }
        }
    }
}